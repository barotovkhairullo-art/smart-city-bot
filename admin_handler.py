import requests
import json
import re
from history_events import add_event, load_events

TELEGRAM_BOT_TOKEN = "8249137825:AAHChjPuHOdL7Y5su0gYpQnwtDZ4ubfXsl0"

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

def load_config():
    with open('config.json', 'r') as f:
        return json.load(f)

def save_config(config):
    with open('config.json', 'w') as f:
        json.dump(config, f, indent=2)

def send_telegram_message(chat_id, text, reply_markup=None):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    data = {
        "chat_id": chat_id, 
        "text": text,
        "parse_mode": "HTML"
    }
    if reply_markup:
        data["reply_markup"] = json.dumps(reply_markup)
    requests.post(url, data=data)

def get_main_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    return {
        "keyboard": [
            ["‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏", "üìÖ –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ"],
            ["üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞", "üì® –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞"],
            ["‚úÖ –í–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞", "‚ùå –í—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞"]
        ],
        "resize_keyboard": True,
        "one_time_keyboard": False
    }

def get_time_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏"""
    return {
        "keyboard": [
            ["üïê 08:00", "üïê 10:00", "üïê 12:00"],
            ["üïê 14:00", "üïê 16:00", "üïê 18:00"],
            ["üïê 20:00", "üïê 22:00", "‚úèÔ∏è –î—Ä—É–≥–æ–µ –≤—Ä–µ–º—è"],
            ["üîô –ù–∞–∑–∞–¥"]
        ],
        "resize_keyboard": True,
        "one_time_keyboard": False
    }

def get_cancel_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è"""
    return {
        "keyboard": [["üîô –û—Ç–º–µ–Ω–∏—Ç—å"]],
        "resize_keyboard": True,
        "one_time_keyboard": True
    }

def process_admin_command(message_text, chat_id):
    config = load_config()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞
    if chat_id not in config["ADMIN_IDS"]:
        send_telegram_message(chat_id, "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã (–∫–Ω–æ–ø–∫–∏)
    if message_text == "‚è∞ –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏" or message_text == "‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏":
        user_states[chat_id] = "waiting_for_time"
        send_telegram_message(chat_id,
            "üïê <b>–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:</b>\n\n"
            "‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –≥–æ—Ç–æ–≤–æ–µ –≤—Ä–µ–º—è\n"
            "‚Ä¢ –ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ <code>–ß–ß:–ú–ú</code>\n"
            "‚Ä¢ –ù–∞–ø—Ä–∏–º–µ—Ä: <code>15:30</code>",
            reply_markup=get_time_keyboard()
        )
        return
    
    elif message_text == "üìÖ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ" or message_text == "üìÖ –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ":
        user_states[chat_id] = "waiting_for_event"
        send_telegram_message(chat_id,
            "üìÖ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:</b>\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —Å–æ–±—ã—Ç–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "<code>–î–î.–ú–ú –¢–µ–∫—Å—Ç —Å–æ–±—ã—Ç–∏—è</code>\n\n"
            "–ü—Ä–∏–º–µ—Ä:\n"
            "<code>25.10 1990 ‚Äì –î–µ–Ω—å –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏</code>",
            reply_markup=get_cancel_keyboard()
        )
        return
    
    elif message_text == "üîß –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞" or message_text == "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞":
        show_settings(chat_id, config)
        return
    
    elif message_text == "üì® —Ç–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞" or message_text == "üì® –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞":
        send_test_message(chat_id)
        return
    
    elif message_text == "‚úÖ –≤–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞" or message_text == "‚úÖ –í–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞":
        enable_bot(chat_id, config)
        return
    
    elif message_text == "‚ùå –≤—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞" or message_text == "‚ùå –í—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞":
        disable_bot(chat_id, config)
        return
    
    elif message_text == "üîô –Ω–∞–∑–∞–¥" or message_text == "üîô –ù–∞–∑–∞–¥":
        user_states.pop(chat_id, None)
        send_telegram_message(chat_id, 
            "üëë <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –£–º–Ω—ã–π –ì–æ—Ä–æ–¥</b>", 
            reply_markup=get_main_keyboard()
        )
        return
    
    elif message_text == "‚úèÔ∏è –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è" or message_text == "‚úèÔ∏è –î—Ä—É–≥–æ–µ –≤—Ä–µ–º—è":
        user_states[chat_id] = "waiting_for_custom_time"
        send_telegram_message(chat_id,
            "‚úèÔ∏è <b>–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤—Ä—É—á–Ω—É—é:</b>\n\n"
            "–§–æ—Ä–º–∞—Ç: <code>–ß–ß:–ú–ú</code>\n"
            "–ü—Ä–∏–º–µ—Ä: <code>15:30</code>\n\n"
            "–í—Ä–µ–º—è —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –¥–ª—è –î—É—à–∞–Ω–±–µ (UTC+5)",
            reply_markup=get_cancel_keyboard()
        )
        return
    
    elif message_text == "üîô –æ—Ç–º–µ–Ω–∏—Ç—å" or message_text == "üîô –û—Ç–º–µ–Ω–∏—Ç—å":
        user_states.pop(chat_id, None)
        send_telegram_message(chat_id, 
            "‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", 
            reply_markup=get_main_keyboard()
        )
        return
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_state = user_states.get(chat_id)
    
    if current_state == "waiting_for_time":
        process_time_input(message_text, chat_id, config)
    
    elif current_state == "waiting_for_custom_time":
        process_custom_time_input(message_text, chat_id, config)
    
    elif current_state == "waiting_for_event":
        process_event_input(message_text, chat_id)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç)
    elif message_text.startswith('/'):
        process_text_commands(message_text, chat_id, config)
    
    else:
        # –ï—Å–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        send_telegram_message(chat_id, 
            "üëë <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –£–º–Ω—ã–π –ì–æ—Ä–æ–¥</b>\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
            reply_markup=get_main_keyboard()
        )

def process_time_input(message_text, chat_id, config):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ –∫–Ω–æ–ø–æ–∫"""
    time_match = re.match(r'üïê\s*(\d{1,2}):(\d{2})', message_text)
    if time_match:
        hour = int(time_match.group(1))
        minute = int(time_match.group(2))
        set_time_config(chat_id, config, hour, minute)
    else:
        send_telegram_message(chat_id, 
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú",
            reply_markup=get_time_keyboard()
        )

def process_custom_time_input(message_text, chat_id, config):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏"""
    time_match = re.match(r'(\d{1,2}):(\d{2})', message_text)
    if time_match:
        hour = int(time_match.group(1))
        minute = int(time_match.group(2))
        set_time_config(chat_id, config, hour, minute)
    else:
        send_telegram_message(chat_id, 
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏!\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <code>–ß–ß:–ú–ú</code>\n"
            "–ü—Ä–∏–º–µ—Ä: <code>15:30</code>",
            reply_markup=get_cancel_keyboard()
        )

def process_event_input(message_text, chat_id):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ —Å–æ–±—ã—Ç–∏—è"""
    parts = message_text.split()
    if len(parts) >= 2:
        try:
            date_str = parts[0]
            event_text = ' '.join(parts[1:])
            
            if '.' in date_str:
                day, month = map(int, date_str.split('.'))
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –¥–∞—Ç—ã
                if 1 <= month <= 12 and 1 <= day <= 31:
                    result = add_event(month, day, event_text)
                    user_states.pop(chat_id, None)
                    send_telegram_message(chat_id, result, reply_markup=get_main_keyboard())
                else:
                    send_telegram_message(chat_id, 
                        "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞!\n–ú–µ—Å—è—Ü: 1-12, –î–µ–Ω—å: 1-31\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:",
                        reply_markup=get_cancel_keyboard()
                    )
            else:
                send_telegram_message(chat_id, 
                    "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã!\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –î–î.–ú–ú\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:",
                    reply_markup=get_cancel_keyboard()
                )
        except Exception as e:
            send_telegram_message(chat_id, 
                f"‚ùå –û—à–∏–±–∫–∞: {e}\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:",
                reply_markup=get_cancel_keyboard()
            )
    else:
        send_telegram_message(chat_id, 
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!\n–í–≤–µ–¥–∏—Ç–µ: –î–î.–ú–ú –¢–µ–∫—Å—Ç —Å–æ–±—ã—Ç–∏—è\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:",
            reply_markup=get_cancel_keyboard()
        )

def set_time_config(chat_id, config, hour, minute):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Ä–µ–º—è –≤ –∫–æ–Ω—Ñ–∏–≥"""
    if 0 <= hour <= 23 and 0 <= minute <= 59:
        config["SEND_HOUR"] = hour
        config["SEND_MINUTE"] = minute
        save_config(config)
        user_states.pop(chat_id, None)
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ UTC –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
        utc_hour = (hour - 5) % 24
        
        send_telegram_message(chat_id,
            f"‚úÖ <b>–í—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!</b>\n\n"
            f"üïê <b>–î—É—à–∞–Ω–±–µ:</b> {hour:02d}:{minute:02d} (UTC+5)\n"
            f"üåê <b>–°–µ—Ä–≤–µ—Ä:</b> {utc_hour:02d}:{minute:02d} (UTC)\n\n"
            f"–°–ª–µ–¥—É—é—â–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –±—É–¥–µ—Ç –≤ {hour:02d}:{minute:02d} –ø–æ –î—É—à–∞–Ω–±–µ",
            reply_markup=get_main_keyboard()
        )
    else:
        send_telegram_message(chat_id, 
            "‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è!\n–ß–∞—Å—ã: 0-23, –ú–∏–Ω—É—Ç—ã: 0-59",
            reply_markup=get_time_keyboard()
        )

def process_text_commands(message_text, chat_id, config):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç)"""
    if message_text.startswith('/start'):
        send_telegram_message(chat_id, 
            "üëë <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –£–º–Ω—ã–π –ì–æ—Ä–æ–¥</b>\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
            reply_markup=get_main_keyboard()
        )
    
    elif message_text.startswith('/settime'):
        parts = message_text.split()
        if len(parts) == 3:
            try:
                hour = int(parts[1])
                minute = int(parts[2])
                set_time_config(chat_id, config, hour, minute)
            except:
                send_telegram_message(chat_id, "‚ùå –û—à–∏–±–∫–∞! –ü—Ä–∏–º–µ—Ä: /settime 14 30")
        else:
            send_telegram_message(chat_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –ü—Ä–∏–º–µ—Ä: /settime 14 30")
    
    elif message_text.startswith('/time'):
        show_time_settings(chat_id, config)
    
    elif message_text.startswith('/addevent'):
        parts = message_text.split()
        if len(parts) >= 3:
            try:
                date_str = parts[1]
                event_text = ' '.join(parts[2:])
                day, month = map(int, date_str.split('.'))
                result = add_event(month, day, event_text)
                send_telegram_message(chat_id, result)
            except:
                send_telegram_message(chat_id, "‚ùå –û—à–∏–±–∫–∞! –ü—Ä–∏–º–µ—Ä: /addevent 15.11 1990 ‚Äì –°–æ–±—ã—Ç–∏–µ")
    
    elif message_text.startswith('/events'):
        show_events_list(chat_id)
    
    elif message_text.startswith('/test'):
        send_test_message(chat_id)
    
    elif message_text.startswith('/enable'):
        enable_bot(chat_id, config)
    
    elif message_text.startswith('/disable'):
        disable_bot(chat_id, config)
    
    elif message_text.startswith('/settings'):
        show_settings(chat_id, config)
    
    else:
        send_telegram_message(chat_id, 
            "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞",
            reply_markup=get_main_keyboard()
        )

def show_time_settings(chat_id, config):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä–µ–º–µ–Ω–∏"""
    utc_hour = (config["SEND_HOUR"] - 5) % 24
    send_telegram_message(chat_id,
        f"‚è∞ <b>–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä–µ–º–µ–Ω–∏:</b>\n\n"
        f"üïê <b>–î—É—à–∞–Ω–±–µ:</b> {config['SEND_HOUR']:02d}:{config['SEND_MINUTE']:02d} (UTC+5)\n"
        f"üåê <b>–°–µ—Ä–≤–µ—Ä:</b> {utc_hour:02d}:{config['SEND_MINUTE']:02d} (UTC)\n"
        f"üîß <b>–°—Ç–∞—Ç—É—Å:</b> {'‚úÖ –í–ö–õ–Æ–ß–ï–ù' if config['BOT_ENABLED'] else '‚ùå –í–´–ö–õ–Æ–ß–ï–ù'}"
    )

def show_settings(chat_id, config):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    utc_hour = (config["SEND_HOUR"] - 5) % 24
    send_telegram_message(chat_id,
        f"‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:</b>\n\n"
        f"üïê <b>–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:</b>\n"
        f"   üìç –î—É—à–∞–Ω–±–µ: {config['SEND_HOUR']:02d}:{config['SEND_MINUTE']:02d} (UTC+5)\n"
        f"   üåê –°–µ—Ä–≤–µ—Ä: {utc_hour:02d}:{config['SEND_MINUTE']:02d} (UTC)\n\n"
        f"üîß <b>–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:</b> {'‚úÖ –í–ö–õ–Æ–ß–ï–ù' if config['BOT_ENABLED'] else '‚ùå –í–´–ö–õ–Æ–ß–ï–ù'}\n"
        f"üëë <b>–ê–¥–º–∏–Ω–æ–≤:</b> {len(config['ADMIN_IDS'])}\n"
        f"üÜî <b>–í–∞—à ID:</b> {chat_id}"
    )

def show_events_list(chat_id):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π"""
    events_db = load_events()
    if not events_db:
        send_telegram_message(chat_id, "üì≠ –í –±–∞–∑–µ –Ω–µ—Ç —Å–æ–±—ã—Ç–∏–π")
        return
    
    message = "üìö <b>–î–∞—Ç—ã —Å —Å–æ–±—ã—Ç–∏—è–º–∏:</b>\n\n"
    for date_key in sorted(events_db.keys()):
        month = int(date_key[:2])
        day = int(date_key[2:])
        count = len(events_db[date_key])
        message += f"üìÖ {day:02d}.{month:02d} - {count} —Å–æ–±—ã—Ç–∏–π\n"
    
    send_telegram_message(chat_id, message)

def send_test_message(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    from history_events import get_tajikistan_history
    from weather_service import get_dushanbe_weather
    
    send_telegram_message(chat_id, "üîÑ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª...")
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendSticker"
        data = {"chat_id": "-1003104338746", "sticker": "CAACAgIAAxkBAAEPnw5o-adhPImHgSmQpfa-yO9kVk1RxAACwwwAAsVEyEtvpOuf2LbHBDYE"}
        requests.post(url, data=data)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        history_text = get_tajikistan_history()
        weather_text = get_dushanbe_weather()
        
        message = "üîÑ –¢–ï–°–¢–û–í–ê–Ø –û–¢–ü–†–ê–í–ö–ê\n\n"
        message += history_text + "\n"
        message += weather_text + "\n\n"
        message += "üìñ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–Ω–∏—Ç–∞—Ä–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ ¬´–£–º–Ω—ã–π –≥–æ—Ä–æ–¥¬ª"
        
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        data = {"chat_id": "-1003104338746", "text": message}
        response = requests.post(url, data=data)
        
        if response.status_code == 200:
            send_telegram_message(chat_id, "‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
        else:
            send_telegram_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏")
    except Exception as e:
        send_telegram_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞: {e}")

def enable_bot(chat_id, config):
    """–í–∫–ª—é—á–∞–µ—Ç –±–æ—Ç–∞"""
    config["BOT_ENABLED"] = True
    save_config(config)
    send_telegram_message(chat_id, "‚úÖ –ë–æ—Ç –≤–∫–ª—é—á–µ–Ω!")

def disable_bot(chat_id, config):
    """–í—ã–∫–ª—é—á–∞–µ—Ç –±–æ—Ç–∞"""
    config["BOT_ENABLED"] = False
    save_config(config)
    send_telegram_message(chat_id, "‚úÖ –ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω!")

def check_admin_messages():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–æ–≤"""
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/getUpdates"
        response = requests.get(url)
        
        if response.status_code == 200:
            data = response.json()
            if data["ok"] and data["result"]:
                for update in data["result"]:
                    if "message" in update and "text" in update["message"]:
                        message_text = update["message"]["text"]
                        chat_id = update["message"]["chat"]["id"]
                        process_admin_command(message_text, chat_id)
                
                # –ü–æ–º–µ—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ
                if data["result"]:
                    last_id = data["result"][-1]["update_id"]
                    requests.get(f"{url}?offset={last_id + 1}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
        return False
