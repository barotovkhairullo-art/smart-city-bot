import json
from datetime import datetime

def load_events():
    try:
        with open('events_database.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except:
        return {}

def save_events(events_db):
    try:
        with open('events_database.json', 'w', encoding='utf-8') as f:
            json.dump(events_db, f, ensure_ascii=False, indent=2)
        return True
    except:
        return False

def get_tajikistan_history():
    try:
        current_date = datetime.now()
        month = current_date.month
        day = current_date.day
        
        date_key = f"{month:02d}{day:02d}"
        events_db = load_events()
        
        if date_key in events_db and events_db[date_key]:
            events = events_db[date_key]
            history_text = f"üìú –î–ï–ù–¨ –í –ò–°–¢–û–†–ò–ò –¢–ê–î–ñ–ò–ö–ò–°–¢–ê–ù–ê - {day:02d}.{month:02d}\n\n"
            for event in events:
                history_text += f"‚Ä¢ {event}\n"
            return history_text
        else:
            return f"üìú –î–ï–ù–¨ –í –ò–°–¢–û–†–ò–ò –¢–ê–î–ñ–ò–ö–ò–°–¢–ê–ù–ê - {day:02d}.{month:02d}\n\n‚Ä¢ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π –Ω–∞ —ç—Ç—É –¥–∞—Ç—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    except Exception as e:
        return f"üìú –î–ï–ù–¨ –í –ò–°–¢–û–†–ò–ò –¢–ê–î–ñ–ò–ö–ò–°–¢–ê–ù–ê\n\n‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"

def add_event(month, day, event_text):
    try:
        events_db = load_events()
        date_key = f"{month:02d}{day:02d}"
        
        if date_key not in events_db:
            events_db[date_key] = []
        
        events_db[date_key].append(event_text)
        
        if save_events(events_db):
            return f"‚úÖ –°–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –¥–∞—Ç—ã {day:02d}.{month:02d}"
        else:
            return "‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {e}"

def delete_event(month, day, event_index):
    try:
        events_db = load_events()
        date_key = f"{month:02d}{day:02d}"
        
        if date_key in events_db and 0 <= event_index < len(events_db[date_key]):
            deleted_event = events_db[date_key].pop(event_index)
            
            # –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–π –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å, —É–¥–∞–ª—è–µ–º –¥–∞—Ç—É
            if not events_db[date_key]:
                del events_db[date_key]
            
            if save_events(events_db):
                return f"‚úÖ –°–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ: {deleted_event}"
            else:
                return "‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"
        else:
            return "‚ùå –°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {e}"
