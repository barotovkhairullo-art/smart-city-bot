import json
from datetime import datetime

def load_events():
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è –∏–∑ JSON —Ñ–∞–π–ª–∞
    """
    try:
        with open('events_database.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        return {}
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–±—ã—Ç–∏–π: {e}")
        return {}

def save_events(events_db):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–±—ã—Ç–∏—è –≤ JSON —Ñ–∞–π–ª
    """
    try:
        with open('events_database.json', 'w', encoding='utf-8') as f:
            json.dump(events_db, f, ensure_ascii=False, indent=2)
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π: {e}")
        return False

def add_event(month, day, event_text):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–±—ã—Ç–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    """
    try:
        events_db = load_events()
        date_key = f"{month:02d}{day:02d}"
        
        if date_key not in events_db:
            events_db[date_key] = []
        
        events_db[date_key].append(event_text)
        
        if save_events(events_db):
            return f"‚úÖ –°–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!\nüìÖ {day:02d}.{month:02d}\nüìù {event_text}"
        else:
            return "‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è"
            
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {e}"

def delete_event(month, day, event_index):
    """
    –£–¥–∞–ª—è–µ—Ç —Å–æ–±—ã—Ç–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    """
    try:
        events_db = load_events()
        date_key = f"{month:02d}{day:02d}"
        
        if date_key in events_db and 0 <= event_index - 1 < len(events_db[date_key]):
            deleted_event = events_db[date_key].pop(event_index - 1)
            
            # –£–¥–∞–ª—è–µ–º –¥–∞—Ç—É –µ—Å–ª–∏ —Å–æ–±—ã—Ç–∏–π –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å
            if not events_db[date_key]:
                del events_db[date_key]
            
            if save_events(events_db):
                return f"‚úÖ –°–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ!\nüìÖ {day:02d}.{month:02d}\nüóëÔ∏è {deleted_event}"
            else:
                return "‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π"
        else:
            return "‚ùå –°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"
            
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}"

def get_tajikistan_history():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
    """
    try:
        events_db = load_events()
        today = datetime.now()
        date_key = f"{today.month:02d}{today.day:02d}"
        events = events_db.get(date_key, [])
        
        if not events:
            return "üìú –ù–∞ —Å–µ–≥–æ–¥–Ω—è –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        
        months = {
            1: "–Ø–ù–í–ê–†–Ø", 2: "–§–ï–í–†–ê–õ–Ø", 3: "–ú–ê–†–¢–ê", 4: "–ê–ü–†–ï–õ–Ø", 
            5: "–ú–ê–Ø", 6: "–ò–Æ–ù–Ø", 7: "–ò–Æ–õ–Ø", 8: "–ê–í–ì–£–°–¢–ê",
            9: "–°–ï–ù–¢–Ø–ë–†–Ø", 10: "–û–ö–¢–Ø–ë–†–Ø", 11: "–ù–û–Ø–ë–†–Ø", 12: "–î–ï–ö–ê–ë–†–Ø"
        }
        
        month_name = months.get(today.month, "")
        history_text = f"üìú –î–ï–ù–¨ –í –ò–°–¢–û–†–ò–ò –¢–ê–î–ñ–ò–ö–ò–°–¢–ê–ù–ê ‚Äì {today.day} {month_name}\n\n"
        
        for event in events:
            history_text += f"‚Ä¢ {event}\n"
            
        return history_text
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏: {e}")
        return "üìú –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
