import time
import json
import requests
from datetime import datetime
from history_events import get_tajikistan_history
from weather_service import get_dushanbe_weather
from admin_handler import check_admin_messages

TELEGRAM_BOT_TOKEN = "8404371791:AAG-uiZ7Oab4udWZsb5HgijR56dPMPBH9W0"
STICKER_ID = "CAACAgIAAxkBAAEPnw5o-adhPImHgSmQpfa-yO9kVk1RxAACwwwAAsVEyEtvpOuf2LbHBDYE"

def load_config():
    with open('config.json', 'r') as f:
        return json.load(f)

def send_sticker(group_id):
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendSticker"
        data = {"chat_id": group_id, "sticker": STICKER_ID}
        response = requests.post(url, data=data)
        if response.status_code == 200:
            print(f"‚úÖ –°—Ç–∏–∫–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É {group_id}!")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∏–∫–µ—Ä–∞ –≤ –≥—Ä—É–ø–ø—É {group_id}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∏–∫–µ—Ä–∞: {e}")

def send_daily_report(group_id):
    try:
        history_text = get_tajikistan_history()
        weather_text = get_dushanbe_weather()
        
        message = f"üìÖ –ï–ñ–ï–î–ù–ï–í–ù–ê–Ø –°–í–û–î–ö–ê\n\n"
        message += history_text + "\n"
        message += weather_text + "\n\n"
        message += "üáπüáØ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–Ω–∏—Ç–∞—Ä–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ ¬´–£–º–Ω—ã–π –≥–æ—Ä–æ–¥¬ª"
        
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        data = {"chat_id": group_id, "text": message}
        
        response = requests.post(url, data=data)
        
        if response.status_code == 200:
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É {group_id}! –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –≥—Ä—É–ø–ø—É {group_id}: {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞: {e}")
        return False

def should_send_now():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–µ–π—á–∞—Å"""
    config = load_config()
    if not config["BOT_ENABLED"]:
        return False
        
    current_time = datetime.now()
    dushanbe_hour = config["SEND_HOUR"]
    dushanbe_minute = config["SEND_MINUTE"]
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –î—É—à–∞–Ω–±–µ –≤ UTC (–î—É—à–∞–Ω–±–µ UTC+5)
    utc_hour = (dushanbe_hour - 5) % 24
    
    return (current_time.hour == utc_hour and 
            current_time.minute == dushanbe_minute and
            current_time.second == 0)

def scheduled_job():
    config = load_config()
    if not config["BOT_ENABLED"]:
        print("‚è∏Ô∏è –ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        return
        
    current_time = datetime.now().strftime('%H:%M:%S')
    groups = config.get("GROUP_IDS", [])
    
    print(f"\nüîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ {current_time}")
    print(f"üì¢ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ {len(groups)} –≥—Ä—É–ø–ø")
    
    for group_id in groups:
        send_sticker(group_id)
        time.sleep(2)
        send_daily_report(group_id)
        time.sleep(1)

def main():
    print("üöÄ –ë–æ—Ç –£–º–Ω—ã–π –ì–æ—Ä–æ–¥ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    config = load_config()
    
    dushanbe_hour = config["SEND_HOUR"]
    dushanbe_minute = config["SEND_MINUTE"]
    utc_hour = (dushanbe_hour - 5) % 24
    
    print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    print(f"‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏:")
    print(f"   üìç –î—É—à–∞–Ω–±–µ: {dushanbe_hour:02d}:{dushanbe_minute:02d} (UTC+5)")
    print(f"   üåê –°–µ—Ä–≤–µ—Ä: {utc_hour:02d}:{dushanbe_minute:02d} (UTC)")
    print(f"üîß –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞: {'‚úÖ –í–ö–õ–Æ–ß–ï–ù' if config['BOT_ENABLED'] else '‚ùå –í–´–ö–õ–Æ–ß–ï–ù'}")
    print("üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∞–∫—Ç–∏–≤–Ω–∞!")
    
    if config["BOT_ENABLED"]:
        print("\nüîÑ –í—ã–ø–æ–ª–Ω—è—é —Ç–µ—Å—Ç–æ–≤—É—é –æ—Ç–ø—Ä–∞–≤–∫—É...")
        groups = config.get("GROUP_IDS", [])
        for group_id in groups:
            send_sticker(group_id)
            time.sleep(2)
            send_daily_report(group_id)
            time.sleep(1)
        print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!\n")
    
    last_sent_hour = -1
    while True:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
            check_admin_messages()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç
            if should_send_now():
                scheduled_job()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
            current_minute = datetime.now().minute
            if current_minute == 0:
                config = load_config()
            
            time.sleep(1)
            
        except KeyboardInterrupt:
            print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            break
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            time.sleep(60)

if __name__ == "__main__":
    main()
