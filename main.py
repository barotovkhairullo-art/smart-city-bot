import time
import json
import requests
import random
from datetime import datetime, timedelta, timezone
from history_events import get_tajikistan_history
from weather_service import get_dushanbe_weather
from admin_handler import check_admin_messages

TELEGRAM_BOT_TOKEN = "8404371791:AAG-uiZ7Oab4udWZsb5HgijR56dPMPBH9W0"
STICKER_ID = "CAACAgIAAxkBAAEPnw5o-adhPImHgSmQpfa-yO9kVk1RxAACwwwAAsVEyEtvpOuf2LbHBDYE"

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è ID –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
last_message_ids = {}

def load_config():
    with open('config.json', 'r') as f:
        return json.load(f)

def send_sticker(group_id):
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendSticker"
        data = {"chat_id": group_id, "sticker": STICKER_ID}
        response = requests.post(url, data=data)
        if response.status_code == 200:
            print(f"‚úÖ –°—Ç–∏–∫–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É {group_id}!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∏–∫–µ—Ä–∞ –≤ –≥—Ä—É–ø–ø—É {group_id}: {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∏–∫–µ—Ä–∞: {e}")
        return False

def get_dushanbe_time():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –î—É—à–∞–Ω–±–µ (UTC+5)"""
    utc_now = datetime.now(timezone.utc)
    dushanbe_time = utc_now + timedelta(hours=5)
    return dushanbe_time.replace(tzinfo=None)

def get_work_time_countdown():
    """–ü–æ–ª—É—á–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç –¥–æ –Ω–∞—á–∞–ª–∞/–æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –≤ –î—É—à–∞–Ω–±–µ"""
    dushanbe_now = get_dushanbe_time()
    
    # –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è —Å 8:00 –¥–æ 17:00 –ø–æ –î—É—à–∞–Ω–±–µ
    work_start = dushanbe_now.replace(hour=8, minute=0, second=0, microsecond=0)
    work_end = dushanbe_now.replace(hour=17, minute=0, second=0, microsecond=0)
    
    # –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã
    motivational_messages = [
        "üéØ –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–º!",
        "üí™ –£—Å–ø–µ–π—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏!",
        "üöÄ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ!",
        "üåü –ï—â–µ –µ—Å—Ç—å –≤—Ä–µ–º—è –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö –¥–µ–ª!",
        "‚ö° –ù–µ —Å–±–∞–≤–ª—è–π—Ç–µ —Ç–µ–º–ø!",
        "üèÜ –ó–∞–≤–µ—Ä—à–∏—Ç–µ –¥–µ–Ω—å –ø–æ–±–µ–¥–æ–π!",
        "üìä –ü–æ–¥–≤–µ–¥–∏—Ç–µ –∏—Ç–æ–≥–∏ –¥–Ω—è!",
        "üéâ –í—ã —Å–ø—Ä–∞–≤–∏—Ç–µ—Å—å —Å–æ –≤—Å–µ–º–∏ –∑–∞–¥–∞—á–∞–º–∏!",
        "üî• –î–µ—Ä–∂–∏—Ç–µ –≤—ã—Å–æ–∫—É—é –ø–ª–∞–Ω–∫—É!",
        "üí´ –í–∞—à–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç!",
        "üöÄ –í–ø–µ—Ä–µ–¥–∏ –µ—â–µ –º–Ω–æ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π!",
        "‚≠ê –ü–æ–∫–∞–∂–∏—Ç–µ —Å–≤–æ–∏ –ª—É—á—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!"
    ]
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—É—é —Ñ—Ä–∞–∑—É
    motivational_text = random.choice(motivational_messages)
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±–∞ –æ—Ç—Å—á–µ—Ç–∞
    time_to_start = work_start - dushanbe_now
    time_to_end = work_end - dushanbe_now
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
    if time_to_start.total_seconds() > 0:
        start_hours = time_to_start.seconds // 3600
        start_minutes = (time_to_start.seconds % 3600) // 60
        start_text = f"‚è≥ –î–æ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è: {start_hours:02d}:{start_minutes:02d}"
    else:
        start_text = "‚úÖ –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –Ω–∞—á–∞–ª—Å—è"
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –¥–ª—è –∫–æ–Ω—Ü–∞ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
    if time_to_end.total_seconds() > 0:
        end_hours = time_to_end.seconds // 3600
        end_minutes = (time_to_end.seconds % 3600) // 60
        end_text = f"‚è≥ –î–æ –∫–æ–Ω—Ü–∞ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –æ—Å—Ç–∞–ª–æ—Å—å: {end_hours:02d}:{end_minutes:02d}"
    else:
        end_text = "üèÅ –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–≤–µ—Ä—à–µ–Ω"
    
    # –°–æ–±–∏—Ä–∞–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç
    countdown_text = f"{start_text}\n{end_text}\n{motivational_text}"
    
    return countdown_text

def edit_daily_report(group_id, message_id):
    """–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –æ–±—Ä–∞—Ç–Ω—ã–º –æ—Ç—Å—á–µ—Ç–æ–º"""
    try:
        history_text = get_tajikistan_history()
        weather_text = get_dushanbe_weather()
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã –ø–æ –î—É—à–∞–Ω–±–µ
        countdown_text = get_work_time_countdown()
        
        message = f"üìÖ –ï–ñ–ï–î–ù–ï–í–ù–ê–Ø –°–í–û–î–ö–ê\n\n"
        message += history_text + "\n\n"
        message += weather_text + "\n\n"
        message += f"üïê –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 8:00 - 17:00\n"
        message += f"{countdown_text}\n\n"
        message += "üáπüáØ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–Ω–∏—Ç–∞—Ä–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ ¬´–£–º–Ω—ã–π –≥–æ—Ä–æ–¥¬ª"
        
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/editMessageText"
        data = {
            "chat_id": group_id,
            "message_id": message_id,
            "text": message
        }
        
        response = requests.post(url, data=data)
        
        if response.status_code == 200:
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø–µ {group_id}! –í—Ä–µ–º—è –î—É—à–∞–Ω–±–µ: {get_dushanbe_time().strftime('%H:%M:%S')}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ {group_id}: {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞: {e}")
        return False

def send_daily_report(group_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ ID"""
    try:
        history_text = get_tajikistan_history()
        weather_text = get_dushanbe_weather()
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã –ø–æ –î—É—à–∞–Ω–±–µ
        countdown_text = get_work_time_countdown()
        
        message = f"üìÖ –ï–ñ–ï–î–ù–ï–í–ù–ê–Ø –°–í–û–î–ö–ê\n\n"
        message += history_text + "\n\n"
        message += weather_text + "\n\n"
        message += f"üïê –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 8:00 - 17:00\n"
        message += f"{countdown_text}\n\n"
        message += "üáπüáØ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–Ω–∏—Ç–∞—Ä–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ ¬´–£–º–Ω—ã–π –≥–æ—Ä–æ–¥¬ª"
        
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        data = {"chat_id": group_id, "text": message}
        
        response = requests.post(url, data=data)
        
        if response.status_code == 200:
            message_id = response.json()['result']['message_id']
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É {group_id}! ID: {message_id}")
            return message_id
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –≥—Ä—É–ø–ø—É {group_id}: {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞: {e}")
        return None

def start_countdown_updates():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É"""
    config = load_config()
    groups = config.get("GROUP_IDS", [])
    
    for group_id in groups:
        if group_id in last_message_ids:
            edit_daily_report(group_id, last_message_ids[group_id])

def scheduled_job():
    config = load_config()
    if not config["BOT_ENABLED"]:
        print("‚è∏Ô∏è –ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        return
        
    current_time = datetime.now().strftime('%H:%M:%S')
    groups = config.get("GROUP_IDS", [])
    
    print(f"\nüéØ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –û–¢–ü–†–ê–í–ö–ê –≤ {current_time}")
    print(f"üì¢ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ {len(groups)} –≥—Ä—É–ø–ø")
    
    success_count = 0
    for group_id in groups:
        if send_sticker(group_id):
            time.sleep(2)
            message_id = send_daily_report(group_id)
            if message_id:
                last_message_ids[group_id] = message_id
                success_count += 1
        time.sleep(1)
    
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {success_count}/{len(groups)} –≥—Ä—É–ø–ø")

def test_bot_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram"""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/getMe"
    try:
        response = requests.get(url)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –°–≤—è–∑—å —Å Telegram API —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            print(f"ü§ñ –ë–æ—Ç: {data['result']['first_name']} (@{data['result']['username']})")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å Telegram: {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram: {e}")
        return False

def force_send_test():
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞"""
    print("\n" + "="*50)
    print("üö® –¢–ï–°–¢–û–í–ê–Ø –û–¢–ü–†–ê–í–ö–ê –ü–û –ö–û–ú–ê–ù–î–ï")
    print("="*50)
    
    config = load_config()
    groups = config.get("GROUP_IDS", [])
    
    if not groups:
        print("‚ùå –ù–µ—Ç –≥—Ä—É–ø–ø –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏")
        return
    
    success_count = 0
    for group_id in groups:
        print(f"\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –≥—Ä—É–ø–ø—É: {group_id}")
        if send_sticker(group_id):
            time.sleep(2)
            message_id = send_daily_report(group_id)
            if message_id:
                last_message_ids[group_id] = message_id
                success_count += 1
        time.sleep(1)
    
    print(f"\nüìä –ò—Ç–æ–≥ —Ç–µ—Å—Ç–∞: —É—Å–ø–µ—à–Ω–æ –≤ {success_count}/{len(groups)} –≥—Ä—É–ø–ø")

def check_current_time():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"""
    current_time = datetime.now()
    dushanbe_time = get_dushanbe_time()
    config = load_config()
    dushanbe_hour = config["SEND_HOUR"]
    dushanbe_minute = config["SEND_MINUTE"]
    
    print(f"\nüïê –¢–ï–ö–£–©–ï–ï –í–†–ï–ú–Ø:")
    print(f"   –°–µ—Ä–≤–µ—Ä (UTC): {current_time.hour:02d}:{current_time.minute:02d}:{current_time.second:02d}")
    print(f"   –î—É—à–∞–Ω–±–µ (UTC+5): {dushanbe_time.hour:02d}:{dushanbe_time.minute:02d}:{dushanbe_time.second:02d}")
    print(f"   –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞:")
    print(f"   - –î—É—à–∞–Ω–±–µ: {dushanbe_hour:02d}:{dushanbe_minute:02d}")

def should_send_now():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–µ–π—á–∞—Å"""
    config = load_config()
    if not config["BOT_ENABLED"]:
        return False
        
    current_time = datetime.now()
    dushanbe_hour = config["SEND_HOUR"]
    dushanbe_minute = config["SEND_MINUTE"]
    
    # –î—É—à–∞–Ω–±–µ UTC+5, —Å–µ—Ä–≤–µ—Ä UTC
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –î—É—à–∞–Ω–±–µ
    current_dushanbe_hour = (current_time.hour + 5) % 24
    current_dushanbe_minute = current_time.minute
    
    # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    if current_time.second % 30 == 0:
        print(f"üïê –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏: –î—É—à–∞–Ω–±–µ {current_dushanbe_hour:02d}:{current_dushanbe_minute:02d} | –û–∂–∏–¥–∞–µ–º: {dushanbe_hour:02d}:{dushanbe_minute:02d}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –î—É—à–∞–Ω–±–µ —Å –≤—Ä–µ–º–µ–Ω–µ–º –æ—Ç–ø—Ä–∞–≤–∫–∏
    return (current_dushanbe_hour == dushanbe_hour and 
            current_dushanbe_minute == dushanbe_minute)

def main():
    print("üöÄ –ë–æ—Ç –£–º–Ω—ã–π –ì–æ—Ä–æ–¥ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    print("="*50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram
    if not test_bot_connection():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞.")
        return
    
    config = load_config()
    
    dushanbe_hour = config["SEND_HOUR"]
    dushanbe_minute = config["SEND_MINUTE"]
    
    print(f"\n‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    print(f"‚è∞ –†–ê–°–ü–ò–°–ê–ù–ò–ï –û–¢–ü–†–ê–í–ö–ò:")
    print(f"   üìç –î—É—à–∞–Ω–±–µ: {dushanbe_hour:02d}:{dushanbe_minute:02d} (UTC+5)")
    print(f"üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï –û–¢–°–ß–ï–¢–ê: –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É —Å 8:00 –¥–æ 17:00")
    print(f"üîß –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞: {'‚úÖ –í–ö–õ–Æ–ß–ï–ù' if config['BOT_ENABLED'] else '‚ùå –í–´–ö–õ–Æ–ß–ï–ù'}")
    print(f"üë• –ì—Ä—É–ø–ø –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: {len(config.get('GROUP_IDS', []))}")
    print("üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∞–∫—Ç–∏–≤–Ω–∞!")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    check_current_time()
    
    if config["BOT_ENABLED"]:
        print(f"\nüîÑ –í—ã–ø–æ–ª–Ω—è—é —Ç–µ—Å—Ç–æ–≤—É—é –æ—Ç–ø—Ä–∞–≤–∫—É...")
        groups = config.get("GROUP_IDS", [])
        success_count = 0
        for group_id in groups:
            print(f"\nüì§ –¢–µ—Å—Ç –≤ –≥—Ä—É–ø–ø—É: {group_id}")
            if send_sticker(group_id):
                time.sleep(2)
                message_id = send_daily_report(group_id)
                if message_id:
                    last_message_ids[group_id] = message_id
                    success_count += 1
            time.sleep(1)
        print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –£—Å–ø–µ—à–Ω–æ: {success_count}/{len(groups)} –≥—Ä—É–ø–ø")
    
    print(f"\n{'='*50}")
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏...")
    print("üîÑ –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É")
    print("üéØ –°–ª—É—á–∞–π–Ω—ã–µ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
    print("üìä –ü–æ–∫–∞–∑ –æ–±–æ–∏—Ö –æ—Ç—Å—á–µ—Ç–æ–≤: –¥–æ –Ω–∞—á–∞–ª–∞ –∏ –¥–æ –∫–æ–Ω—Ü–∞ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è")
    print("="*50)
    
    last_minute = -1
    last_update_minute = -1
    
    while True:
        try:
            current_time = datetime.now()
            dushanbe_time = get_dushanbe_time()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
            check_admin_messages()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
            if current_time.minute != last_update_minute:
                last_update_minute = current_time.minute
                print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞... –î—É—à–∞–Ω–±–µ: {dushanbe_time.strftime('%H:%M')}")
                start_countdown_updates()
            
            # –õ–æ–≥–∏—Ä—É–µ–º —Å–º–µ–Ω—É –º–∏–Ω—É—Ç—ã
            if current_time.minute != last_minute:
                last_minute = current_time.minute
                print(f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: –î—É—à–∞–Ω–±–µ {dushanbe_time.hour:02d}:{dushanbe_time.minute:02d} | –û–∂–∏–¥–∞–µ–º: {dushanbe_hour:02d}:{dushanbe_minute:02d}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç
            if should_send_now():
                print(f"\nüéØ –í–†–ï–ú–Ø –û–¢–ü–†–ê–í–ö–ò –ù–ê–°–¢–£–ü–ò–õ–û! –î—É—à–∞–Ω–±–µ: {dushanbe_time.strftime('%H:%M:%S')}")
                scheduled_job()
                print(f"\n‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ª–µ–¥—É—é—â–∞—è - –∑–∞–≤—Ç—Ä–∞ –≤ {dushanbe_hour:02d}:{dushanbe_minute:02d} –î—É—à–∞–Ω–±–µ")
                # –ñ–¥–µ–º 60 —Å–µ–∫—É–Ω–¥ —á—Ç–æ–±—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–≤–∞–∂–¥—ã –≤ –æ–¥–Ω—É –º–∏–Ω—É—Ç—É
                time.sleep(60)
            
            time.sleep(1)
            
        except KeyboardInterrupt:
            print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            break
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            time.sleep(60)

if __name__ == "__main__":
    main()
